---
import { Image } from "astro:assets";
import img from "../assets/image.webp";
---

<div
  id="inicio"
  class="relative flex flex-col w-full min-h-[400px] h-[65%] md:min-h-[450px] md:h-[50%] items-center justify-center bg-secondary transition-bg shadow-bottom overflow-hidden"
>
  <div class="logo-background"></div>
  <div class="absolute pt-[11.5vh] z-2">
    <div class="w-65 h-65 bg-primary rounded-full p-2.5 contenedor-style">
      <Image
        src={img}
        loading="eager"
        alt="Imagen"
        class="w-full h-full rounded-full object-cover border border-transparent"
      />
    </div>
    <div class="flex justify-center text-center py-8">
      <a
        href="/proba"
        class="font-bold pe-2 text-xl text-green-950 ubuntu-mono-regular"
      >
        Disponible
      </a>
      <span class="h-3 w-3 pointer-events-none mt-[2.5px]">
        <span
          class="animate-ping absolute inline-flex h-3 w-3 mt-1.5 rounded-full bg-green-300"
        ></span>
        <span class="relative inline-flex rounded-full h-3 w-3 bg-green-300"
        ></span>
      </span>
    </div>
  </div>
</div>

<style>
  @keyframes changeBgGradient {
    0% {
      transform: translate(25%, 35%);
    }
    50% {
      transform: translate(-25%, -35%);
    }
    100% {
      transform: translate(25%, 35%);
    }
  }

  .logo-background {
    position: absolute;
    z-index: 0;
    will-change: transform;
    transform: translate(25%, 35%);
    background: linear-gradient(
        164deg,
        #43a82f 0%,
        #56dd4a 42%,
        #89ff71 49%,
        #89ff71 51%,
        #56dd4a 58%,
        #43a82f 100%
      )
      repeat;
    width: 300%;
    height: 400%;
    animation: changeBgGradient 15s cubic-bezier(0.42, 0, 0.58, 1) 1s infinite;
  }
</style>

<script>
  const jumbo = document.querySelector(".jumbo") as HTMLElement;

  if (jumbo) {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (!entry.isIntersecting) {
            jumbo.style.animationPlayState = "paused"; // Pausa la animación
          } else {
            jumbo.style.animationPlayState = "running"; // Reanuda la animación
          }
        });
      },
      { threshold: 0.1 } // Detecta cuando al menos el 10% del elemento está visible
    );

    observer.observe(jumbo);
  }
</script>
