---
import Label from "./label.astro";
import TextArea from "./textarea.astro";

const { language } = Astro.props;
---

<form
  id="solicitud"
  method="POST"
  class="flex flex-col md:flex-row justify-center gap-8 pt-15"
>
  <div class="flex basis-1/2 items-center px-2">
    <h2 class="ubuntu-regular text-xl md:text-2xl text-prettier">
      {
        language == "es"
          ? "Si crees que puedo serte útil,"
          : "If you need any service related to computing and/or business,"
      }
      <span class="font-bold text-primary">
        {language == "es" ? "no dudes en contactarme." : "contact me!"}</span
      >
    </h2>
  </div>
  <div class="flex basis-1/2 flex-col justify-center gap-6 px-2">
    <Label
      id="name"
      type="text"
      label={language == "es" ? "Nombre" : "Name"}
      placeholder={language == "es"
        ? "Nombre y Apellido"
        : "First name and Last name"}
    />
    <Label
      id="email"
      type="email"
      label={language == "es" ? "Correo electrónico" : "Email"}
      placeholder={language == "es" ? "Nombre@ejemplo.com" : "Name@example.com"}
    />
    <input
      type="text"
      name="company"
      class="hidden w-full mt-0.5 py-1.5 px-2 bg-input rounded-md focus:outline-none shadow-sm text-sm"
      placeholder={language == "es" ? "Empresa" : "Company"}
    />
    <TextArea
      id="message"
      label={language == "es" ? "Mensaje" : "Message"}
      placeholder={language == "es"
        ? "Escribe tu mensaje aquí"
        : "Write me your message!"}
    />
    <button
      id="enviar"
      type="submit"
      class="bg-button w-[50%] border-green-400 shadow-sm rounded-md ubuntu-regular text-black font-semibold cursor-pointer py-0.5"
      >{language == "es" ? "Enviar" : "Send"}</button
    >
  </div>
</form>

<script>
  import { actions } from "astro:actions";

  const form = document.querySelector("#solicitud") as HTMLFormElement;
  const button = document.querySelector("#enviar") as HTMLButtonElement;
  const labelName = document.querySelector("#name") as HTMLInputElement;
  const labelEmail = document.querySelector("#email") as HTMLInputElement;
  const labelMessage = document.querySelector("#message") as HTMLInputElement;

  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(form);

      try {
        const { data, error } = await actions.sendMessage(formData);

        if (error) {
          console.error("Error:", error);
        } else {
          if (button) {
            button.textContent = "Enviado";
            button.classList.add("bg-button-sent");
            button.classList.remove("bg-button", "cursor-pointer");
            button.disabled = true;
            labelName.disabled = true;
            labelEmail.disabled = true;
            labelMessage.disabled = true;
          }
          console.log("Exito:", data);
        }
      } catch (error) {
        console.log(error);
      }
    });
  }
</script>

<style>
  .bg-button {
    background: #16c98d;
    transition:
      background 0.4s ease-in-out,
      box-shadow 0.4s ease-in-out,
      color 0.3s ease-in-out;
    animation:
      bgColorChange 3s cubic-bezier(0, 0.45, 1, 0.45) 0.5s infinite,
      bgShadow 3s infinite;
    animation-fill-mode: forwards;
  }

  .bg-button-sent {
    background: #71b19c;
    box-shadow:
      inset -10px 10px 6px -15px rgba(255, 255, 255, 0.4),
      inset 0 -10px 20px -10px rgba(0, 0, 0, 0.25);

    box-shadow:
      4px 4px 4px 0px rgba(0, 0, 0, 0.25),
      inset 1px 2px 2px 0px rgb(255, 255, 255, 0.8);
  }

  .bg-button:hover {
    box-shadow: 0 0 7px #16c98d;
    color: white;
    animation:
      bgColorHover 4s linear infinite,
      bgShadowHover 4s infinite;
    animation-fill-mode: forwards;
  }

  @keyframes bgColorChange {
    0% {
      background: #16c98d; /* Verde oscuro */
    }
    50% {
      background: #39f1b4; /* Verde claro */
    }
    100% {
      background: #16c98d; /* Regresa a negro */
    }
  }

  @keyframes bgColorHover {
    15% {
      background: #16c98d; /* Verde oscuro */
    }
    40% {
      background: #303eff; /* Verde claro */
    }
    60% {
      background: #ff3bff; /* Regresa a negro */
    }
    80% {
      background: #303eff; /* Regresa a negro */
    }
  }

  @keyframes bgShadow {
    0% {
      box-shadow: 0 0 7px #16c98d;
    }
    50% {
      box-shadow: 0 0 10px #16c98d;
    }
    100% {
      box-shadow: 0 0 7px #16c98d;
    }
  }

  @keyframes bgShadowHover {
    20% {
      box-shadow: 0 0 7px #16c98d; /* Verde oscuro */
    }
    40% {
      box-shadow: 0 0 7px #303eff; /* Verde claro */
    }
    60% {
      box-shadow: 0 0 7px #ff3bff; /* Regresa a negro */
    }
    80% {
      box-shadow: 0 0 7px #303eff; /* Regresa a negro */
    }
  }
</style>
