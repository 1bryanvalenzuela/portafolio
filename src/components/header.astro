---
const { language, theme } = Astro.props;

let menuColor = "#000000";
if (theme === "dark") {
  menuColor = "#ffffff";
}

let path = "";
if (language === "en") {
  path = "en/";
}
---

<nav
  id="header-container"
  class="fixed w-full flex justify-center flex-row z-10 text-primary"
>
  <div
    id="header"
    class="relative flex flex-col w-full justify-center bg-primary contenedor-style"
  >
    <div
      class="flex w-full max-w-[720px] h-15 justify-between items-center mx-auto"
    >
      <h1 class="ubuntu-regular text-lg font-bold ms-8 md:ms-0 cursor-default">
        Bryan Valenzuela CÃ¡ceres
      </h1>
      <div class="flex">
        <button
          id="menu-button"
          class="flex w-full md:hidden cursor-pointer me-4 self-end"
        >
          <div class="p-4">
            <svg
              height={24}
              viewBox="0 0 12 12"
              enable-background="new 0 0 12 12"
              id="menu-svg"
              version="1.1"
              xml:space="preserve"
              xmlns="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              fill={menuColor}
              ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
                id="SVGRepo_tracerCarrier"
                stroke-linecap="round"
                stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
                <g>
                  <rect fill={menuColor} height="1" width="11" x="0.5" y="5.5"
                  ></rect>
                  <rect fill={menuColor} height="1" width="11" x="0.5" y="2.5"
                  ></rect>
                  <rect fill={menuColor} height="1" width="11" x="0.5" y="8.5"
                  ></rect>
                </g>
              </g></svg
            >
          </div>
        </button>
        <ul
          class="hidden md:flex flex-col md:flex-row gap-2 md:gap-8 ubuntu-mono-regular md:py-1.5 text-lg z-50 font-bold"
        >
          <li class="py-2">
            <a href={`/${path}#inicio`} class="linkheader"
              >{language == "es" ? "/Inicio" : "/Home"}</a
            >
          </li>
          <li class="py-2">
            <a href={`/${path}#projects`} class="linkheader"
              >{language == "es" ? "/Proyectos" : "/Projects"}</a
            >
          </li>
          <li class="py-2">
            <a href={`/${path}#contact`} class="linkheader"
              >{language == "es" ? "/Contacto" : "/Contact"}</a
            >
          </li>
          <li class="py-2">
            <a href={`/${path}#otros`} class="linkheader"
              >{language == "es" ? "/Otros" : "/Others"}</a
            >
          </li>
        </ul>
      </div>
    </div>
    <div id="mobile-menu-container" class="md:hidden flex w-full">
      <ul
        id="menu-links"
        class="hidden flex-col gap-2 ubuntu-mono-regular text-lg font-bold w-full"
      >
        <li class="flex w-full">
          <a
            href={`/${path}#inicio`}
            class="px-8 py-2 hover:bg-cyan-500 text-primary w-full"
            >{language == "es" ? "/Inicio" : "/Home"}</a
          >
        </li>
        <li class="flex w-full">
          <a
            href={`/${path}#projects`}
            class="px-8 py-2 hover:bg-cyan-500 text-primary w-full"
            >{language == "es" ? "/Proyectos" : "/Projects"}</a
          >
        </li>
        <li class="flex w-full">
          <a
            href={`/${path}#contact`}
            class="px-8 py-2 hover:bg-cyan-500 text-primary w-full"
            >{language == "es" ? "/Contacto" : "/Contact"}</a
          >
        </li>
        <li class="flex w-full">
          <a
            href={`/${path}#otros`}
            class="px-8 py-2 hover:bg-cyan-500 text-primary w-full"
            >{language == "es" ? "/Otros" : "/Others"}</a
          >
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  function initHeader() {
    const header = document.querySelector("#header") as HTMLElement;
    if (!header) return;

    const menuButton = document.querySelector("#menu-button");
    const menuLinks = document.querySelector("#menu-links") as HTMLElement;
    const headerContainer = document.querySelector(
      "#header-container"
    ) as HTMLElement;

    let prevScrollpos = window.pageYOffset;

    function toggleMenu(status: string) {
      if (status === "show") {
        menuLinks.classList.remove("hidden");
        menuLinks.classList.add("flex");
      } else {
        menuLinks.classList.add("hidden");
        menuLinks.classList.remove("flex");
      }
    }

    function toggleHeader(status: string) {
      if (status === "show") {
        header.style.top = "0";
      } else {
        if (menuLinks.classList.contains("flex")) {
          header.style.top = "-17rem";
          setTimeout(() => {
            toggleMenu("hide");
          }, 300);
        } else {
          header.style.top = "-7.5rem";
        }
      }
    }

    if (menuButton && menuLinks) {
      menuButton.addEventListener("click", () => {
        if (menuLinks.classList.contains("hidden")) {
          toggleMenu("show");
        } else {
          toggleMenu("hide");
        }
      });

      menuLinks.addEventListener("click", () => {
        if (window.innerWidth < 768) {
          toggleMenu("hide");
        }
      });

      headerContainer.addEventListener("mouseleave", () => {
        if (window.innerWidth >= 768) {
          toggleMenu("hide");
        }
      });
    }

    window.addEventListener("scroll", function () {
      let currentScrollPos = window.pageYOffset;

      if (currentScrollPos === 0) {
        toggleHeader("show");
      } else {
        if (prevScrollpos <= currentScrollPos) {
          toggleHeader("hide");
        } else {
          toggleHeader("show");
        }
      }

      prevScrollpos = currentScrollPos;
    });
  }

  initHeader();
  document.addEventListener("astro:after-swap", () => {
    initHeader();
  });
</script>

<style>
  #header-container {
    pointer-events: none;
  }

  #menu-links {
    top: 0;
    transition:
      opacity 0.3s ease-in-out,
      top 0.3s ease-in-out,
      padding 0.3s ease-in-out;
  }

  #header {
    opacity: 80%;
    top: 0;
    transition:
      opacity 0.3s ease-in-out,
      top 0.3s ease-in-out,
      padding 0.3s ease-in-out;
    pointer-events: auto;
  }

  #header:hover {
    opacity: 95%;
  }
</style>
