---
import Contributions from "./gitcontrib";
import Form from "./form/main.astro";
import Enlaces from "./links/main.astro";
import Card from "./card.astro";
import Certificados from "./certs.astro";

import projects from "../../public/projects.json";
import certificates from "../../public/certificates.json";
import info from "../../public/info.json";

const { language } = Astro.props;
const cookies = Astro.cookies;
const themeCookies = cookies.get("theme");
let contribTheme = "";
if (themeCookies) {
  if (themeCookies.value === "dark") {
    contribTheme = "dark";
  } else {
    contribTheme = "light";
  }
}

const certificatesArray = Object.entries(certificates);
const projectsArray =
  language == "es" ? Object.entries(projects.es) : Object.entries(projects.en);
---

<div class="relative flex w-full bg-primary">
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute -inset-[10px]"></div>
  </div>
  <div
    class="flex flex-col w-full items-center text-center gap-12 pt-12 md:pt-6 text-primary"
  >
    <div
      class="w-full px-8 md:px-0 md:w-[720px] flex flex-col items-center text-center gap-12"
    >
      <p class="md:text-lg ubuntu-regular text-justify z-2">
        {language == "es" ? info.es.p1 : info.en.p1}
      </p>
      <p class="md:text-lg ubuntu-regular text-justify z-3">
        {language == "es" ? info.es.p2 : info.en.p2}
      </p>
    </div>
    <div
      class="w-full px-8 md:px-0 md:w-[720px] flex flex-col md:flex-row md:justify-between text-color-primary ubuntu-mono-regular text-xl md:text-2xl font-bold gap-8 z-3"
    >
      <Enlaces language={language} />
    </div>
  </div>
</div>
<div
  id="projects"
  class="flex bg-primary text-primary ubuntu-regular items-center justify-center pt-20 md:pt-30"
>
  <div class="flex flex-col w-full md:w-[720px] gap-12">
    <h2
      class="flex z-2 ubuntu-mono-regular text-2xl md:text-4xl font-bold transition-colors mx-8 md:mx-0"
    >
      {language == "es" ? "/Proyectos" : "/Projects"}
    </h2>
    {
      projectsArray.map(([id, project]) => (
        <Card
          id={id}
          img={project.img}
          title={project.title}
          tags={project.tags}
          link={project.link}
        >
          <div set:html={project.content} />
        </Card>
      ))
    }
  </div>
</div>
<div class="flex justify-center bg-primary pt-12">
  <div class="w-full px-8 md:px-0 md:w-[720px]">
    <Contributions
      client:only="React"
      language={language}
      theme={contribTheme}
    />
  </div>
</div>
<div
  id="contact"
  class="flex justify-center bg-primary text-primary pt-15 md:pt-30"
>
  <div class="w-full px-8 md:px-0 md:w-[720px]">
    <h2
      class="flex z-2 ubuntu-mono-regular text-2xl md:text-4xl font-bold transition-colors md:mx-0"
    >
      {language == "es" ? "/Contacto" : "/Contact"}
    </h2>
    <Form language={language} />
  </div>
</div>
<div
  id="otros"
  class="flex justify-center bg-primary text-primary pt-15 md:pt-30"
>
  <div class="w-full px-8 md:px-0 md:w-[720px]">
    <h2
      class="flex z-2 ubuntu-mono-regular text-2xl md:text-4xl font-bold transition-colors md:mx-0"
    >
      {language == "es" ? "/Otros" : "/Others"}
    </h2>
    <div class="flex flex-col gap-8 pb-15 md:pb-30">
      <h3
        class="flex z-2 ubuntu-mono-regular text-xl font-bold transition-colors md:mx-0 pt-12"
      >
        {language == "es" ? "Certificados" : "Certifications"}
      </h3>
      {
        certificatesArray.map(([id, certificate]) => (
          <Certificados
            title={id}
            link={certificate.link}
            date={language == "es" ? certificate.esdate : certificate.endate}
            autor={certificate.autor}
          />
        ))
      }
    </div>
  </div>
</div>

<style>
  .content-bg {
    background-image: repeating-linear-gradient(
      164deg,
      #cfffc570 0%,
      transparent 15%,
      #cfffc570 30%
    );
    pointer-events: none;
    mask-image: linear-gradient(
        90deg,
        rgba(0, 0, 0, 0.8) 10%,
        transparent 40%,
        transparent 60%,
        rgba(0, 0, 0, 0.8) 90%
      ),
      linear-gradient(0deg, transparent 20%, black 80%);
    mask-composite: intersect, intersect;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    var title = document.getElementById("title");
    var i = 0;
    var txt = "Bryan Valenzuela";
    var speed = 200;

    if (!title) return;
    title.innerHTML = "";

    function typeWriter() {
      if (i < txt.length) {
        if (!title) return;
        title.innerHTML += txt.charAt(i);
        i++;
        setTimeout(typeWriter, speed);
      }
    }

    typeWriter();
  });
</script>
