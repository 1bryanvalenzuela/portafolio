---
const { img, title, tags, link } = Astro.props;

const tagsArray = Object.values(tags);
const imgSrc = `/${img}`;
---

<a
  href={link}
  class="flex flex-col border-card rounded-lg p-2 mx-8 md:m-0 contenedor-style transition-all"
>
  <div class="flex flex-col md:flex-row gap-4 md:gap-2">
    <img
      src={imgSrc}
      loading="lazy"
      class="rounded-lg w-auto max-w-70 md:max-h-40 mx-auto md:mx-0"
    />
    <div class="flex flex-col gap-4 md:gap-2 px-2">
      <span
        class="text-start text-color-primary ubuntu-mono-regular text-lg md:text-xl font-bold"
      >
        {title}
      </span>
      <slot />
      <div class="flex flex-wrap gap-2 justify-end items-end mt-auto">
        {
          tagsArray.map((tag) => (
            <span class="rounded-full bg-tag p-1 leading-none">
              <span class="text-white px-1 text-sm md:text-md font-semibold">
                {tag}
              </span>
            </span>
          ))
        }
      </div>
    </div>
  </div>
</a>

<style>
  .bg-tag {
    background: linear-gradient(175deg, #5cda43 20%, #3fa72b 120%);
  }

  .border-card {
    position: relative;
    border: 3px solid transparent;
    transition:
      border 0.4s ease-in-out,
      border-color 0.4s ease-in-out;
  }

  .border-card:hover {
    border: 3px solid black;
    animation:
      borderColorChange 5s linear infinite,
      bgShadowHover 5s infinite;
  }

  @keyframes borderColorChange {
    5% {
      border-color: black; /* Verde oscuro */
    }
    25% {
      border-color: rgb(22, 201, 141); /* Verde claro */
    }
    45% {
      border-color: rgb(45, 0, 207); /* Rojo oscuro */
    }
    65% {
      border-color: rgb(63, 6, 63); /* Regresa a negro */
    }
    95% {
      border-color: black; /* Regresa a negro */
    }
  }
</style>
